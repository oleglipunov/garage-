
public class  Car implements Comparable<Car> {

	private int year;
	private double tank;
	private String model;
	
	public void setYear(int year){
		this.year = year;
	}
	
	public int getYear(){
		
		return year;
	}
	
	public void setTank(double tank){
		this.tank = tank;
	}
	
	public double getTank (){
		return tank;
	}
	
	public void setModel(String model){
		this.model = model;
	}
	
	public String getModel(){
		return model;
	}
	
	public double pumpGas(double gas){
		if (tank + gas < 15.0)
			this.tank = tank + gas;
		else if (tank + gas == 15.0) {
			this.tank = tank + gas;
			System.out.println("Your tank is full, "
					+ "you have 15 gallons in it!");}
		else
			System.out.println("You are trying to pump more gas than needed");
			
		return tank;
	}
	
	public void display(){
		System.out.println(this.year);
		System.out.println(this.tank);
		System.out.println(this.model);
	}
	
	@Override
	public boolean equals(Object obj){
		if (this == obj) return true;
		
		if (obj == null) return false; // check for null
		
		if (getClass() != obj.getClass() ) return false; // make sure obj is a car
		
		final Car passedCar = (Car) obj; // cast the obj as the car
		
		if (this.year  != passedCar.year){
			return false;
		}
		if (this.tank != passedCar.tank){
			return false;
		}
		if (this.model == null){ if (passedCar.model != null)
			return false;
		}
		else if (!this.model.equals(passedCar.model))
			return false;
		
		
		return true;
	}// end Override .equals
	
	
	@Override
	public String toString() {
		return new String(year + " "  + model + " " + tank);
	}
	
	@Override
    public int compareTo(Car originalCar)
 	{
 	
		if (this.year < originalCar.year) 
 		return -1;
 	
 	if (this.year > originalCar.year) 
 		return 1;
 	
 	return 0;
 	
 	} // end Override toString


}// end class car
	
	

